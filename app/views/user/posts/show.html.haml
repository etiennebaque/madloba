- post_type = @post.location.area? ? 'area' : 'exact'
.container#show_post_page
  - if flash[:new_post]
    #new_post_success_message.alert.alert-dismissable.alert-success{:style => "margin-top: 21px;"}
      %button.close{"data-dismiss" => "alert", :type => "button"} ×
      = t('post.create_success', title: flash[:new_post])
    - if flash[:post_expire]
      .alert.alert-dismissable.alert-info
        %button.close{"data-dismiss" => "alert", :type => "button"} ×
        = flash[:post_expire]
  - if flash[:success]
    .alert.alert-dismissable.alert-success{:style => "margin-top: 21px;"}
      %button.close{"data-dismiss" => "alert", :type => "button"} ×
      = flash[:success]
  - if flash[:error_message]
    .alert.alert-dismissable.alert-danger{:style => "margin-top: 21px;"}
      %button.close{"data-dismiss" => "alert", :type => "button"} ×
      = flash[:error_message]
  .row
    .col-lg-12
      %h3= @post.title
      - if flash[:new_post] && !@map_settings[:is_area]
        -#
          Post id added just when the post has just been created. This is to be read by post_websocket.coffee,
          when it is an exact location
        = hidden_field_tag 'new_post_id', @post.id
      .post-title
        - if !is_owning(@post)
          -# Post publisher
          %span
            %strong= t('post.published')
            = publisher_name(@post)
        - else
          - if @your_post_has_expired
            %strong= t('post.you_own')
            %br/
            %span.post-expiring= t('post.has_expired', expire_date: @post.expire_date)
          - else
            %strong= t('post.you_own')
            = t('post.you_manage')
            = succeed "." do
              %a{:href => "/user/posts/#{@post.id}/edit"}= t('post.here')
        .back-link
          = link_to(t('post.back_home'), root_path)

  -# Map
  .row
    .col-lg-12.post-paragraph
      #map.small

  - if @post.image?
    .row
      .col-lg-7.col-sm-12.post-paragraph
        -# Partial showing info about the ad
        = render 'shared/post_summary'

      -# Post image
      .col-lg-5.col-sm-12.post-image
        - if is_image_available(@post)
          = image_tag @post.image_url(:normal).to_s, width: '100%'
        - else
          .post-processing
            = t('post.show_post_image_processed')
            %br/
            = t('post.will_show_up')
  - else
    .row
      .col-lg-12.post-paragraph
        -# Partial showing info about the ad
        = render 'shared/post_summary'
  .row
    -# 'Send message' text area
    = render 'shared/posts_send_message', post: @post

-# Rendering JS scripts
- content_for :scripts do
  -# Includes all the Javascript related to map rendering (Leaflet, MapQuest, and scripts that creates the actual map
  = render 'shared/map_scripts'
  :javascript
    var postType = "#{post_type}";
    new PostForm();
    new PostDetailPage(postType);
